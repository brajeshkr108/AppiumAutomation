package Test.Scripts;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.Test;

import com.relevantcodes.extentreports.LogStatus;

import GenericLibrary.Generic;
import GlobalInitializer.BrowserInitializer;
import Pages.LoginPage;
import Pages.RegisterPage;
import io.appium.java_client.android.AndroidKeyCode;

public class RegisterUserTest extends BrowserInitializer {
	
	@Test
	public void loginApp()  {
		try{
			
			initializer.logger=initializer.extent.startTest("Started Selendroid App Testing Using Appium");
			
			//RegisterPage registerPage=new RegisterPage();
			RegisterPage registerPage=new RegisterPage();		
			registerPage.enterLocalization("Nous");	
			initializer.logger.log(LogStatus.PASS, "Entered Localization");
			//logger.addScreenCapture(Generic.takeScreenShotPath());
			
			//logger.log(LogStatus.INFO, "Screenshots",logger.addScreenCapture(Generic.takeScreenShotPath()));
			
			registerPage.click_Browse();	
			initializer.logger.log(LogStatus.PASS, "Clicked on Browse Button");
			registerPage.enterUserDetails("Braj", "braj@gmail.com", "454", "Appium");
			initializer.logger.log(LogStatus.PASS, "Entered User Details ");
			
			Thread.sleep(3000);			
			registerPage.click_Java();
			initializer.logger.log(LogStatus.PASS, "Selected Language as java");
			 Thread.sleep(3000);
			
			 initializer.driver.pressKeyCode(AndroidKeyCode.BACK);
		    Thread.sleep(3000);
			  
		    registerPage.click_AcceptCheckbox();
		    initializer.logger.log(LogStatus.PASS, "Clicked on Accept Checkbox");
		    Thread.sleep(3000);
		    
		    //logger.log(LogStatus.INFO, "Screenshots",logger.addScreenCapture(Generic.takeScreenShotPath()));
			
		    registerPage.click_RegisterUser();
		    initializer.logger.log(LogStatus.PASS, "Clicked on Register User");

			     
			
			
			 
			
			
		} catch (Exception e) {
			
		}
	}
	
	
	
	@AfterMethod
	public void afterMethod(){		
		extent.endTest(logger);
		extent.flush();
		}


	}	
	
	
	



































